Acumulus events
===============

Warning
-------
These events are experimental. Depending on feedback from actual usage, details
may change in future versions.

This file documents the events that the Acumulus component defines. Currently,
the following events are defined in the plugin group acumulus:
- onAcumulusInvoiceCreated
- onAcumulusInvoiceCompleted
- onAcumulusInvoiceSent


Event onAcumulusInvoiceCreated (group acumulus)
===============================================

Description
-----------
The "onAcumulusInvoiceCreated" filter is used to change the invoice that will be
sent to Acumulus. The Creator component of the Acumulus component has created the
raw invoice and is about to complete and send it to Acumulus. This filter allows
you to:
- Prevent sending the invoice to Acumulus.
- Change the raw invoice as will be passed through the Completor component and
  then be sent Acumulus.

Usage
-----
When the "onAcumulusInvoiceCreated" filter is called, it is passed 2 arguments:
- array &$invoice:
  A keyed array containing the raw invoice that will be sent to Acumulus. The
  array structure is similar to the XML structure as defined on
  https://apidoc.sielsystems.nl/content/invoice-add, though at this stage, only
  the customer key will be present at the highest level. The line tag is
  represented as a numeric array of lines, even if if there is only 1 line.

  Some keys might be missing or NULL, if they are still not set after this
  filter has been applied, they will be filled in (not overwritten) by the
  Completor component of this component before the actual sending takes place.
  See \Siel\Acumulus\Invoice\Creator::getCustomer()
  See \Siel\Acumulus\Invoice\Creator::getInvoice()
  See \Siel\Acumulus\Invoice\Creator::getInvoiceLines()

  Some additional keys might be available.
  See \Siel\Acumulus\Invoice\Creator::getInvoice()
  See \Siel\Acumulus\Invoice\Creator::getInvoiceTotals()
  See \Siel\Acumulus\Invoice\Creator::getInvoiceLines()

- \Siel\Acumulus\Invoice\Source $source: The wrapped VirtueMart or HikaShop
  order or refund.

The filter may alter the invoice and should set it to NULL if it wants to
prevent sending the invoice to Acumulus.


Event onAcumulusInvoiceCompleted (group acumulus)
=================================================

Description
-----------
The "onAcumulusInvoiceCompleted" filter is used to commplete/correct the raw
invoice as created by the Creator component of this component and that will be
sent to Acumulus. The Creator component of the Acumulus component has created
the raw invoice and that has been completed by the Completor. This filter
allows you to:
- Prevent sending the invoice to Acumulus.
- Change the completed invoice as will be sent to Acumulus.

Usage
-----
When the "onAcumulusInvoiceCompleted" filter is called, it is passed 2
arguments:
- array &$invoice:
  A keyed array containing the raw invoice that will be sent to Acumulus. The
  array structure is similar to the XML structure as defined on
  https://apidoc.sielsystems.nl/content/invoice-add, though at this stage, only
  the customer key will be present at the highest level. The line tag is
  represented as a numeric array of lines, even if if there is only 1 line.

  Some additional keys might be available.
  See \Siel\Acumulus\Invoice\Creator::getInvoice()
  See \Siel\Acumulus\Invoice\Creator::getInvoiceTotals()
  See \Siel\Acumulus\Invoice\Creator::getInvoiceLines()

- Source $source: The wrapped WooCommerce order or refund.

The filter may alter the invoice or should set it to NULL if it wants to
prevent sending the invoice to Acumulus.

Typical usages for these events allow to implement business logic specific to
your business, think of:
- Template, account number, or cost center selection based on order specifics.
- Adding descriptive info to the invoice or invoice lines based on custom order
  meta data.
- Correcting payment info based on payment components not supported by this component.

The difference between Created and Completed lies in:
- Tax handling: the vat type (reversed vat, EU vat, Dutch VAT)
- Tax rates: if tax rates are computed via a division, they might contain
  rouding errors after Creation. Based on actual VAT rates these should have
  been corrected after Completion.
- Division of discount over multiple vat rates.

Example 1
---------
// Defines a filter that prevents sending 0-amount invoices (free products).
// @author Wouter D. Snel
add_filter('acumulus_invoice_created', 'acumulus_stop_null');

function acumulus_stop_null(array $invoice, WC_Abstract_Order $order) {
	if ($invoice['customer']['invoice']['meta-invoice-amountinc'] == 0) {
	  return NULL;
	}
	else {
	  return $invoice;
	}
}


Example 2
---------
use Siel\Acumulus\Common\WebAPI;

add_filter('acumulus_invoice_created', 'my_acumulus_invoice_created', 10, 2);

function my_acumulus_invoice_created(array $invoice, WC_Order $order) {
  $is_paid = my_determine_payment_status($order);
  if ($is_paid) {
    $invoice['customer']['invoice']['paymentstatus'] = WebAPI::PaymentStatus_Paid;
    $invoice['customer']['invoice']['paymentdate'] = date('Y-m-d', strtotime($order->paid_date);
  }
  else {
    $invoice['customer']['invoice']['paymentstatus'] = WebAPI::PaymentStatus_Due;
    unset($invoice['customer']['invoice']['paymentdate']);
  }
  return $invoice;
}


Event onAcumulusInvoiceSent (group acumulus)
============================================

Description
-----------
The "onAcumulusInvoiceSent" event is triggered when the invoice has been sent
to Acumulus. This is an informational event, thus no return value is expected,
nor can you change any of the values passed in.

When the "onAcumulusInvoiceSent" action is called, it is passed 3 arguments:
- array $invoice The invoice that has been sent toi Acumulus
- Source $source, the wrapped order or refund object.
- array $result The result of the invoice add API service.

See https://apidoc.sielsystems.nl/content/invoice-add for the structure of the
arrays.


External Resources
==================
- https://apidoc.sielsystems.nl/content/invoice-add.
- https://apidoc.sielsystems.nl/content/warning-error-and-status-response-section-most-api-calls
